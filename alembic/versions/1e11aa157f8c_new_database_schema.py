"""new database schema

Revision ID: 1e11aa157f8c
Revises: 
Create Date: 2025-08-22 18:48:16.129492

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1e11aa157f8c'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('review')
    op.drop_table('restaurant')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('restaurant',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('restaurant_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('street_address', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='restaurant_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('review',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('restaurant', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('review_text', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('review_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['restaurant'], ['restaurant.id'], name=op.f('review_restaurant_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('review_pkey'))
    )
    # ### end Alembic commands ###
